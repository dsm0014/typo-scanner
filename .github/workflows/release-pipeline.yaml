name: Release Pipeline
on:
  workflow_dispatch:
  push:
    tags:
      - "*"

permissions: read-all

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: typo-scanner

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -o ${{ env.IMAGE_NAME }}

      - name: Test
        run: go test -v ./...

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.IMAGE_NAME }}
          path: ./${{ env.IMAGE_NAME }}

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_NAME }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Log into registry
        uses: docker/login-action@v1.12.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.SECRET_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}
          build-args: {"BINARY_NAME=${{ env.IMAGE_NAME }}"}

  secure:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [build, docker]
    steps:
      - name: cosign-installer
        uses: sigstore/cosign-installer@v2.0.0

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_NAME }}

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_NAME }}.intoto.jsonl

      - name: Set RELEASE_VERSION env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Log into registry
        uses: docker/login-action@v1.12.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.SECRET_TOKEN }}

      - uses: anchore/sbom-action@v0
        id: image-sbom
        with:
          image: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}
          artifact-name: ${{ env.IMAGE_NAME }}.sbom

      - name: Write signing key to disk
        run: 'echo "$KEY" > cosign.key'
        shell: bash
        env:
          KEY: ${{ secrets.COSIGN_KEY }}

      - name: Sign the published Docker image
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: cosign sign --key cosign.key ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}

      - uses: actions/setup-go@v3

      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.IMAGE_NAME }}.sbom

      - name: Attest the SBOM
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: cosign attest --predicate ${{ env.IMAGE_NAME }}.sbom --type custom --key cosign.key ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}


